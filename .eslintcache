[{"C:\\Users\\gliwa\\Desktop\\BIU\\react3\\my-app\\src\\index.js":"1","C:\\Users\\gliwa\\Desktop\\BIU\\react3\\my-app\\src\\components\\getRandom.js":"2","C:\\Users\\gliwa\\Desktop\\BIU\\react3\\my-app\\src\\components\\GetRandom.js":"3"},{"size":226,"mtime":1610450706448,"results":"4","hashOfConfig":"5"},{"size":404,"mtime":1610402426767,"results":"6","hashOfConfig":"5"},{"size":1461,"mtime":1610475847467,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"1n1y5p7",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"C:\\Users\\gliwa\\Desktop\\BIU\\react3\\my-app\\src\\index.js",["17"],"\nimport './index.scss';\nimport React from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport GetRandom from \"./components/GetRandom\"\n\n\n\n\n\n ReactDOM.render(\n    <GetRandom />,\n     document.getElementById(\"root\")\n );",["18","19"],"C:\\Users\\gliwa\\Desktop\\BIU\\react3\\my-app\\src\\components\\getRandom.js",[],"C:\\Users\\gliwa\\Desktop\\BIU\\react3\\my-app\\src\\components\\GetRandom.js",["20"],"import React, { useState } from \"react\";\r\n\r\n\r\nexport default function GetRandom() {\r\n\r\n\r\n\r\nvar tab=[];\r\n\r\nconst [RandomNumber, setnumber] = useState([]);\r\n\r\nconst removeElement = (x) => {\r\n  let p = [...RandomNumber];\r\n  p.splice(x, 1)\r\n  setnumber(p)\r\n}\r\n\r\n  const RandomInteger = () =>{\r\n   \r\n    setnumber(Array.apply(0, Array(10)).map(() => Math.floor(Math.random() * 100)));\r\n  }\r\n  const RandomBinary = () =>{\r\n   \r\n    setnumber(Array.apply(0, Array(10)).map(() => Math.floor(Math.random() * 100).toString(2)));\r\n  }\r\n  const RandomOctal = () =>{\r\n   \r\n    setnumber(Array.apply(0, Array(10)).map(() => Math.floor(Math.random() * 100).toString(8)));\r\n  }\r\n  const RandomHex = () =>{\r\n   \r\n    setnumber(Array.apply(0, Array(10)).map(() => Math.floor(Math.random() * 100).toString(16)));\r\n  }\r\n \r\n  return(\r\n    <div>\r\n      <ul>\r\n             {RandomNumber.map((i, x) => {\r\n   \t         return <li key={x}>{i}</li>\r\n            })}\r\n        </ul>  \r\n        <button onClick={removeElement}>\r\n        Usun Element\r\n        </button>\r\n        <button onClick={RandomInteger}>\r\n         Generuj Liczby ca≈Çkowite\r\n        </button>\r\n        <button onClick={RandomBinary}>\r\n         Generuj Liczby binarne\r\n        </button>\r\n        <button onClick={RandomOctal}>\r\n         Generuj Liczby binarne\r\n        </button>\r\n        <button onClick={RandomHex}>\r\n         Generuj Liczby binarne\r\n        </button>\r\n        \r\n        \r\n    </div>\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n}",{"ruleId":"21","severity":1,"message":"22","line":4,"column":20,"nodeType":"23","messageId":"24","endLine":4,"endColumn":26},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"21","severity":1,"message":"29","line":8,"column":5,"nodeType":"23","messageId":"24","endLine":8,"endColumn":8},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","no-native-reassign",["30"],"no-negated-in-lhs",["31"],"'tab' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]